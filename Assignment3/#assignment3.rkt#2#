#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 0
1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1           0 14597 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 6 #"srfi/1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"siguiente"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"number"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #")) "
0 0 14 3 5 #"lista"
0 0 24 3 4 #" )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"sumas"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"numero1"
0 0 24 3 1 #" "
0 0 14 3 7 #"numero2"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"numero1"
0 0 24 3 1 #" "
0 0 14 3 7 #"numero2"
0 0 24 3 3 #")) "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 4"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"factorial"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 5"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"obtener-al-azar0"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"frecuencias"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"par"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"par"
0 0 24 3 3 #")) "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 11 #"frecuencias"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"variableAleatoria"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"frecuenciaAleatoria"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 14 3 17 #"variableAleatoria"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"encontrarLimite"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 9 #"acumulada"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 10 #"frecuencia"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 9 #"acumulada"
0 0 24 3 1 #" "
0 0 14 3 10 #"frecuencia"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 15 #"encontrarLimite"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"acumulada"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 5 #"lista"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 10 #"frecuencia"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"encontrarLimite"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 19 #"frecuenciaAleatoria"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 6"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"obtener-al-azar"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 3 #"lam"
0 0 15 3 1 #"b"
0 0 15 3 2 #"da"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"listaCorrecta"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"real?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 14 3 5 #"lista"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"elemento"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 16 #"obtener-al-azar0"
0 0 24 3 2 #" ("
0 0 14 3 13 #"listaCorrecta"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 7"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"direccionEjemplos1"
0 0 24 3 1 #" "
0 0 19 3 109
(
 #"\"/Users/patriciamayotejedor/Documents/Private Development/UNED/Mach"
 #"ine Learning/MachineLearning/ejemplos.scm\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 8"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"leer-ejemplos"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"archivo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 20 #"call-with-input-file"
0 0 24 3 1 #" "
0 0 14 3 7 #"archivo"
0 0 24 3 1 #" "
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 18 #"direccionEjemplos1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 9"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"anadir-ejemplo"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 10"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"atributoEncontrado"
0 0 24 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 18 #"atributoEncontrado"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 11"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"mezclar"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"defin"
0 0 15 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"ejemplosJuntos"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 6 #"lista2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 2 #") "
0 0 14 3 14 #"ejemplosJuntos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 12"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"separar"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 10 #"proporcion"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublista1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"exact-round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 10 #"proporcion"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"crearSublista2"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 5 #"casos"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"crearSublista2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"remq"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #") "
0 0 14 3 5 #"casos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"sublista2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"crearSublista2"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublista1"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"sublista1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"set-subtract"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 14 3 9 #"sublista2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"sublista1"
0 0 24 3 1 #" "
0 0 14 3 9 #"sublista2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 13"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"folds"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #") "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #") "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"crearSublista"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 8 #"sublista"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"quitar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"crearSublista"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"remq"
0 0 24 3 1 #" "
0 0 14 3 6 #"quitar"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"quitar"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 51 #"; define cuantos extra elementos tendra la sublista"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"elementosExtras"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 2 #"su"
0 0 14 3 1 #"b"
0 0 14 3 13 #"listasCon1Mas"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"crearFolds"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #" "
0 0 14 3 11 #"foldsHechos"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 11 #"foldsHechos"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"elementosExtras"
0 0 24 3 2 #" ("
0 0 14 3 15 #"elementosExtras"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 2 #" ("
0 0 14 3 13 #"crearSublista"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 15 #"elementosExtras"
0 0 24 3 2 #") "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"crearFolds"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #" "
0 0 14 3 15 #"elementosExtras"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 11 #"foldsHechos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 12 #"set-subtract"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"crearFolds"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 3 2 #") "
0 0 14 3 5 #"casos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercico 14"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"stratify"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #") "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #") "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 13 #"; PREPARACION"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 110
(
 #"; Devuelve una lista con tantos elementos como clases hay. Cada elem"
 #"ento contiene todos los casos de esa clase"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"separarClases"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 14 3 10 #"agrupacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 10 #"agrupacion"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 13 #"claseAgrupada"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caso"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 4 #"eqv?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 13 #"separarClases"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 10 #"agrupacion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"claseAgrupada"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 143
(
 #"; Devuelve una lista con tantos elementos como clases hay. Cada elem"
 #"ento es un par, con la clase y la frecuencia en la que aparece en la"
 #" lista "
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tipo"
0 0 24 3 1 #" "
0 0 14 3 5 #"grupo"
0 0 24 3 2 #")("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"tipo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"grupo"
0 0 24 3 4 #"))) "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 23 #"; MANIPULACION DE CASOS"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 46 #"; Elimina el caso dado de las clases agrupadas"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"quitarCaso"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 16 #"casoParaEliminar"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 12 #"casosDeClase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"remq"
0 0 24 3 1 #" "
0 0 14 3 16 #"casoParaEliminar"
0 0 24 3 1 #" "
0 0 14 3 12 #"casosDeClase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 101
(
 #"; Encuentra todos los casos de una clase. Si no quedan mas casos de "
 #"esa clase, escoge de otra al azar"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"encontrarCasosDeClase"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 1 #" "
0 0 14 3 19 #"clasesConFrecuencia"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 23 #"casosDeClaseEncontrados"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 12 #"casosDeClase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 12 #"casosDeClase"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 10 #"primerCaso"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 12 #"casosDeClase"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 18 #"claseDelPrimerCaso"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"primerCaso"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"primerCaso"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 18 #"claseDelPrimerCaso"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 23 #"casosDeClaseEncontrados"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 21 #"encontrarCasosDeClase"
0 0 24 3 2 #" ("
0 0 14 3 16 #"obtener-al-azar0"
0 0 24 3 1 #" "
0 0 14 3 19 #"clasesConFrecuencia"
0 0 24 3 2 #") "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 1 #" "
0 0 14 3 19 #"clasesConFrecuencia"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 23 #"casosDeClaseEncontrados"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #" ))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 47 #"; Devuelve un elemento al azar de la clase dada"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"obtenerAlAzarDeClase"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"encontrarCasosDeClase"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 12 #"casosDeClase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"primerCaso"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 12 #"casosDeClase"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"claseDelPrimerCaso"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"primerCaso"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"primerCaso"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 18 #"claseDelPrimerCaso"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 21 #"encontrarCasosDeClase"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #" ))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 19 #"; CREACION DE FOLDS"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 90
(
 #"; Define cuantos extra elementos tendra una sublista (cuando no se p"
 #"uedan dividir exactos)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"elementosExtras"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 101
(
 #"; Dado el tamanio deseado, se crea una sublista con proporcion adema"
 #"s de devolver los casos sobrantes"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"crearSublista"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 15 #"numeroElementos"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 15 #"numeroElementos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 12 #"claseElegida"
0 0 24 3 2 #" ("
0 0 14 3 16 #"obtener-al-azar0"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 11 #"casoElegido"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 2 #" ("
0 0 14 3 21 #"encontrarCasosDeClase"
0 0 24 3 1 #" "
0 0 14 3 12 #"claseElegida"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"crearSublista"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 15 #"numeroElementos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 10 #"quitarCaso"
0 0 24 3 1 #" "
0 0 14 3 11 #"casoElegido"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 11 #"casoElegido"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 40 #"; Se crean los folds de manera recursiva"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"crearFolds"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #" "
0 0 14 3 11 #"foldsHechos"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 11 #"foldsHechos"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"elementosExtras"
0 0 24 3 2 #" ("
0 0 14 3 15 #"elementosExtras"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"separarSublistaDeCasos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"crearSublista"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 15 #"elementosExtras"
0 0 24 3 2 #") "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 22 #"separarSublistaDeCasos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"casosSobrantes"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 22 #"separarSublistaDeCasos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"crearFolds"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #" "
0 0 14 3 15 #"elementosExtras"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 11 #"foldsHechos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"sublista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 14 #"casosSobrantes"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"clasesConFrecuencia"
0 0 24 3 2 #" ("
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"crearFolds"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 15 #"tamanoSublistas"
0 0 24 3 1 #" "
0 0 14 3 16 #"sublistasCon1Mas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 1 #" "
0 0 14 3 19 #"clasesConFrecuencia"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; A0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"A0"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 17 3 35 #";;Asignaci\23on de VARIABLES locales."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 36 #";;=================================="
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"atributos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"indice-clase"
0 0 24 3 1 #" "
0 0 17 3 44 #";el \23\20ndice de 'clase en la lista atributos."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"index-where"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"clase"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"clases-posibles"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 17 3 39 #";s\23olo interesa el conjunto de valores."
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 1 #" "
0 0 14 3 12 #"indice-clase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 67
#";;variable que mantiene la cuenta de las apariciones de cada clase."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 21 #"clases-contabilizadas"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 62
#";;Como primer paso, se inicializa a 0 la cuenta de cada clase."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"clase"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 15 #"clases-posibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #" ))"
0 0 17 3 37 #";variable sin asignaci\23on, de momento"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 35 #";;Asignaci\23on de FUNCIONES locales."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 36 #";;=================================="
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 65
(
 #";;funci\23on que admite como par\23ametro un ejemplo, el cual utiliz"
 #"a"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 48 #";;para actualizar la contabilizaci\23on de clases."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 26 #"actualizar-contabilizacion"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 17 #"clase-del-ejemplo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 12 #"indice-clase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 21 #"clases-contabilizadas"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 17 #"clase-del-ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 5 #";then"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 5 #";else"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 21 #"clases-contabilizadas"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                       )))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 17 3 29 #";fin de las asignaciones let*"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 43 #";;Ahora, por cada ejemplo de entrenamiento,"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 46 #";; se actualiza la contabilizaci\23on de clases."
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 26 #"actualizar-contabilizacion"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 60
#";;Finalmente se escoge la clase que m\23as veces ha aparecido:"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 42 #";;;primero, se obtiene el n\23umero m\23aximo;"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 21 #"clases-contabilizadas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55
#";;;segundo, se obtiene la clase con ese n\23umero m\23aximo"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55 #";;; (almacenado temporalmente en la variable concepto)."
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 8 #"concepto"
0 0 24 3 3 #")) "
0 0 14 3 21 #"clases-contabilizadas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 66
#";;Y por \23ultimo se devuelve el concepto inducido por el algoritmo."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 8 #"concepto"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; A0i"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"A0i"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";  Ejercicio 15"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";(define esencia (A0 ejemplos))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";(define casos (list-tail ejemplos 1))"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";(define ejemplos-sin-clase (map (lambda(x) (drop-right x 1)) casos)"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";(define extension (map (lambda(x) (A0i esencia x)) ejemplos-sin-cla"
 #"se))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";  Ejercicio 16"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; Precis"
0 0 17 3 1 #"i"
0 0 17 3 65
#"on es el numero de aciertos dividido por el numero total de casos"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"precision"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"lam"
0 0 15 3 1 #"b"
0 0 15 3 2 #"da"
0 0 24 3 2 #" ("
0 0 14 3 13 #"casosEjemplos"
0 0 24 3 1 #" "
0 0 14 3 14 #"casosExtension"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 38 #";(define casosEjemplos (cdr ejemplos))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 40 #";(define casosExtension (cdr extension))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroCasos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 13 #"casosEjemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"numeroAciertos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caso"
0 0 24 3 2 #") "
0 0 14 3 4 #"caso"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"casoEjemplo"
0 0 24 3 1 #" "
0 0 14 3 13 #"casoExtension"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 11 #"casoEjemplo"
0 0 24 3 3 #") ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 13 #"casoExtension"
0 0 24 3 4 #"))) "
0 0 14 3 13 #"casosEjemplos"
0 0 24 3 1 #" "
0 0 14 3 14 #"casosExtension"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                 ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"exact->inexact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 14 #"numeroAciertos"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroCasos"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #"; Error es el numero de errores dividido por el numero total de caso"
 #"s, o lo que es lo mismo, 1 - precision"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"error"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"casosEjemplos"
0 0 24 3 1 #" "
0 0 14 3 14 #"casosExtension"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"precisionTotal"
0 0 24 3 2 #" ("
0 0 14 3 9 #"precision"
0 0 24 3 1 #" "
0 0 14 3 13 #"casosEjemplos"
0 0 24 3 1 #" "
0 0 14 3 14 #"casosExtension"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 14 #"precisionTotal"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";  Ejercicio 17"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"direccionEjemplos2"
0 0 24 3 1 #" "
0 0 19 3 110
(
 #"\"/Users/patriciamayotejedor/Documents/Private Development/UNED/Mach"
 #"ine Learning/MachineLearning/ejemplos2.scm\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Preparar ejemplos"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";(define ejemplos2 (leer-ejemplos direccionEjemplos2))"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";(define ejemplos-sin-clase2 (map (lambda(x) (drop-right x 1)) ejemp"
 #"los2))"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Pasar ejemplos por el interprete A0i"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";(define extension2 (map (lambda(x) (A0i esencia x)) ejemplos-sin-cl"
 #"ase2))"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Definir precision y error"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";(define precisionEjemplos2 (precision (cdr ejemplos2) (cdr extensio"
 #"n2)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#";(define errorEjemplo2 (error (cdr ejemplos2) (cdr extension2)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";  Ejercicio 18"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; A1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 5 #"defin"
0 0 15 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 2 #"A1"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 17 3 35 #";;Asignaci\23on de VARIABLES locales."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 36 #";;=================================="
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 143
(
 #"; Devuelve una lista con tantos elementos como clases hay. Cada elem"
 #"ento es un par, con la clase y la frecuencia en la que aparece en la"
 #" lista "
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tipo"
0 0 24 3 1 #" "
0 0 14 3 5 #"grupo"
0 0 24 3 2 #")("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"tipo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"grupo"
0 0 24 3 4 #"))) "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesAgrupadas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 110
(
 #"; Devuelve una lista con tantos elementos como clases hay. Cada elem"
 #"ento contiene todos los casos de esa clase"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"separarClases"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 14 3 10 #"agrupacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 10 #"agrupacion"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 13 #"claseAgrupada"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caso"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 4 #"eqv?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 13 #"separarClases"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 10 #"agrupacion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"claseAgrupada"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; A1i"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"A1i"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"obtener-al-azar0"
0 0 24 3 1 #" "
0 0 14 3 20 #"paresClaseFrecuencia"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";(define esenciaA1 (A1 ejemplos))"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";(define extensionA1i (map (lambda(x) (A1i esenciaA1 x)) ejemplos-si"
 #"n-clase))"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";(define precisionEjemplosA1 (precision (cdr ejemplos) (cdr extensio"
 #"nA1i)))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 19"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Pasar ejemplos por el interprete A1i"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";(define extensionA1iEjemplos2 (map (lambda(x) (A1i esenciaA1 x)) ej"
 #"emplos-sin-clase2))"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Definir precision y error"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";(define precisionA1Ejemplos2 (precision (cdr ejemplos2) (cdr extens"
 #"ionA1iEjemplos2)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";(define errorA1Ejemplo2 (error (cdr ejemplos2) (cdr extensionA1iEje"
 #"mplos2)))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 22"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";(define ejemplosJuntos (mezclar ejemplos ejemplos2))"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; Se usan todos los ejemplos para entrenar y para evaluar"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"resustitution"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"esencia"
0 0 24 3 1 #" "
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"ejemplos-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"cogerEsencia"
0 0 24 3 2 #" ("
0 0 14 3 7 #"esencia"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"cogerExtension"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 12 #"cogerEsencia"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 18 #"ejemplos-sin-clase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"precision"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 14 #"cogerExtension"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Se usan cada vez solo un ejemplo para evaluar (con todos los ejemp"
 #"los)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"leave-one-out"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"evaluarCaso"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 15 #"casoParaEvaluar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"casosDeEntrenamiento"
0 0 24 3 2 #" ("
0 0 14 3 4 #"remq"
0 0 24 3 1 #" "
0 0 14 3 15 #"casoParaEvaluar"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"casoSinClase"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 15 #"casoParaEvaluar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"entrenar"
0 0 24 3 2 #" ("
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 20 #"casosDeEntrenamiento"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"interpretar"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 8 #"entrenar"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 12 #"casoSinClase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 15 #"casoParaEvaluar"
0 0 24 3 3 #") ("
0 0 14 3 4 #"last"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 11 #"interpretar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"numeroAciertos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caso"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"evaluarCaso"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"exact->inexact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 14 #"numeroAciertos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 23"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";(define ejemplosSeparados (separar 0.67 ejemplosJuntos))"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define atributos (car ejemplosJuntos))"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";(define ejemplosEntrenamiento (append (list atributos) (list-ref ej"
 #"emplosSeparados 0)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";(define ejemplosEvaluacion (append (list atributos) (list-ref ejemp"
 #"losSeparados 1)))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"holdout"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 21 #"ejemplosEntrenamiento"
0 0 24 3 1 #" "
0 0 14 3 18 #"ejemplosEvaluacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"defin"
0 0 15 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 26 #"ejemplosEvaluacionSinClase"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 18 #"ejemplosEvaluacion"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"entrenar"
0 0 24 3 2 #" ("
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 21 #"ejemplosEntrenamiento"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"interpretar"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 8 #"entrenar"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 26 #"ejemplosEvaluacionSinClase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"precision"
0 0 24 3 1 #" "
0 0 14 3 18 #"ejemplosEvaluacion"
0 0 24 3 1 #" "
0 0 14 3 11 #"interpretar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 24"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"cross-validation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ejemplosEnFolds"
0 0 24 3 2 #" ("
0 0 14 3 5 #"folds"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"evaluarFold"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 15 #"foldParaEvaluar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"foldsDeEntrenamiento"
0 0 24 3 2 #" ("
0 0 14 3 4 #"remq"
0 0 24 3 1 #" "
0 0 14 3 15 #"foldParaEvaluar"
0 0 24 3 1 #" "
0 0 14 3 15 #"ejemplosEnFolds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"ejemplosEntrenamiento"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 3 #") ("
0 0 14 3 7 #"append*"
0 0 24 3 1 #" "
0 0 14 3 20 #"foldsDeEntrenamiento"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 70
(
 #";(define ejemplosEvaluacion (append (list atributos) foldParaEvaluar"
 #"))"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"holdout"
0 0 24 3 1 #" "
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 21 #"ejemplosEntrenamiento"
0 0 24 3 1 #" "
0 0 14 3 15 #"foldParaEvaluar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"sumaPrecisiones"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fold"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"evaluarFold"
0 0 24 3 1 #" "
0 0 14 3 4 #"fold"
0 0 24 3 3 #")) "
0 0 14 3 15 #"ejemplosEnFolds"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"exact->inexact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 15 #"sumaPrecisiones"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"stratified-cross-validation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ejemplosEnFolds"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stratify"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"evaluarFold"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 15 #"foldParaEvaluar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"foldsDeEntrenamiento"
0 0 24 3 2 #" ("
0 0 14 3 4 #"remq"
0 0 24 3 1 #" "
0 0 14 3 15 #"foldParaEvaluar"
0 0 24 3 1 #" "
0 0 14 3 15 #"ejemplosEnFolds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"ejemplosEntrenamiento"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 3 #") ("
0 0 14 3 7 #"append*"
0 0 24 3 1 #" "
0 0 14 3 20 #"foldsDeEntrenamiento"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 70
(
 #";(define ejemplosEvaluacion (append (list atributos) foldParaEvaluar"
 #"))"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"holdout"
0 0 24 3 1 #" "
0 0 14 3 13 #"entrenamiento"
0 0 24 3 1 #" "
0 0 14 3 10 #"interprete"
0 0 24 3 1 #" "
0 0 14 3 21 #"ejemplosEntrenamiento"
0 0 24 3 1 #" "
0 0 14 3 15 #"foldParaEvaluar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"sumaPrecisiones"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fold"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"evaluarFold"
0 0 24 3 1 #" "
0 0 14 3 4 #"fold"
0 0 24 3 3 #")) "
0 0 14 3 15 #"ejemplosEnFolds"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"exact->inexact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 15 #"sumaPrecisiones"
0 0 24 3 1 #" "
0 0 14 3 11 #"numeroFolds"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; BLOQUE 2"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; ================================================================="
 #"=="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 1"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";(match-CL '((*) (5 40) (subiendo) (estable) (10 60) (si)) '(bueno 2"
 #"0 subiendo estable 50 si ))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"testNominal"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 12 #"atributoTest"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 12 #"atributoTest"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 12 #"atributoTest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"atributoTest"
0 0 24 3 2 #") "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"testNumerico"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"limites"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"estandarizarLimites"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"limites"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 2 #"))"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 6 #"-inf.0"
0 0 24 3 1 #" "
0 0 21 3 6 #"+inf.0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"            )))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 2 #" ("
0 0 14 3 19 #"estandarizarLimites"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"inferior"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"superior"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 22 #"; Test limite inferior"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"limiteInferior"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"limite"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 22 #"; Test limite superior"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"limiteSuperior"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"limite"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 14 #"limiteInferior"
0 0 24 3 1 #" "
0 0 14 3 8 #"inferior"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 3 #") ("
0 0 14 3 14 #"limiteSuperior"
0 0 24 3 1 #" "
0 0 14 3 8 #"superior"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"andmap"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 12 #"atributoTest"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 3 #") ("
0 0 14 3 12 #"testNumerico"
0 0 24 3 1 #" "
0 0 14 3 12 #"atributoTest"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"testNominal"
0 0 24 3 1 #" "
0 0 14 3 12 #"atributoTest"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 11 #"concepto-CL"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"       ))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 2"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";(CLi '((*) (5 40) (subiendo) (estable) (10 60) (si)) '(bueno 20 sub"
 #"iendo estable 50 si ))"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";(define (CLi concepto-CL ejemplo-sin-clase)"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; (let*"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";     ( ;; Variables "
0 0 24 29 1 #"\n"
0 0 17 3 29 #";      (casos (cdr ejemplos))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";     (ejemploQuePasaTest (findf"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";                          (lambda (caso)"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";                            (define casoSinClase (drop-right caso 1"
 #"))"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";                            (match-CL concepto-CL casoSinClase)) ca"
 #"sos))"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";      (tiposDeClases (atributo 'clase ejemplos)))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 56 #";; Devolver clase segun el ejemplo que ha pasado el test"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";   (define clase"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";       (if (list? ejemploQuePasaTest)"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";           (list-ref ejemploQuePasaTest (- (length ejemploQuePasaTe"
 #"st) 1))"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";           (obtener-al-azar tiposDeClases)))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";   (append ejemplo-sin-clase (list clase))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"CLi"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLgeneral"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CLespecifico"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"(() ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 9 #") () () ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 6 #") ()))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLcercano"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 6 #"+inf.0"
0 0 24 3 3 #") ("
0 0 14 3 8 #"subiendo"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #") ("
0 0 14 3 2 #"no"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 4"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concepto-CL-mas-general"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"drop-right"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"dato"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 4 #"dato"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 7 #"'-inf.0"
0 0 24 3 1 #" "
0 0 21 3 7 #"'+inf.0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 5"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"concepto-CL-mas-especifico"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"dato"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 4 #"dato"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()]))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 6"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoNominal"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 6 #"))))) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"esTestNominal"
0 0 24 3 2 #" ("
0 0 14 3 15 #"atributoNominal"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 24 #"; Despejar caso infinito"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"despejarInfinitos"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"rango"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rango"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 6 #"-inf.0"
0 0 24 3 1 #" "
0 0 21 3 6 #"+inf.0"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 2 #") "
0 0 14 3 5 #"rango"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          ))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 35 #"; Quitar 0.1 a los limites abiertos"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"valor"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"limite"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          ))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"pasaTestNominal"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"symbol?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"symbol?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 45 #"; Primero nos aseguramos que podemos usar car"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 3 #";[("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 5 #"pair?"
0 0 17 3 1 #" "
0 0 17 3 2 #"t1"
0 0 17 3 3 #") ("
0 0 17 3 5 #"pair?"
0 0 17 3 1 #" "
0 0 17 3 2 #"t2"
0 0 17 3 3 #") ("
0 0 17 3 7 #"symbol?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 2 #"t1"
0 0 17 3 4 #")) ("
0 0 17 3 7 #"symbol?"
0 0 17 3 2 #" ("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 2 #"t2"
0 0 17 3 4 #"))) "
0 0 17 3 3 #"#t]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 62
#"; Si pasa el test nominal significa que es igual o mas general"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 11 #"testNominal"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"pasaTestNumerico"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 27 #"; Controlando casos con'(*)"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"despejarInfinitos"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"despejarInfinitos"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 17 #"despejarInfinitos"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"despejarInfinitos"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 16 #"; Segun longitud"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 49 #";[(and (number? (car t1)) (number? (car t2))) #t]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 25 #"; Segun amplitud de rango"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 49 #";[(> (- (valor (list-ref t1 1)) (valor (car t1)))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 54 #";    (- (valor (list-ref t2 1)) (valor (car t2)))) #t]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 10 #";[else #f]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 13 #"esTestNominal"
0 0 24 3 2 #" ("
0 0 14 3 15 #"pasaTestNominal"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #") ("
0 0 14 3 16 #"pasaTestNumerico"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 7"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"concepto-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 9 #"concepto1"
0 0 24 3 1 #" "
0 0 14 3 9 #"concepto2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 9 #"concepto1"
0 0 24 3 1 #" "
0 0 14 3 9 #"concepto2"
0 0 24 3 3 #")) "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 8"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"cmp-concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 13 #"concepto-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"concepto-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 13 #"concepto-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 3 #") ("
0 0 14 3 13 #"concepto-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 13 #"concepto-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"concepto-CL>="
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-1"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 9"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #"; (especializaciones-atributo-nominal '((bueno) (5 40) (subiendo) (e"
 #"stable) (10 60) (si)) 2 (car ejemplos))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"atributoEncontrado"
0 0 24 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 18 #"atributoEncontrado"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 34 #"especializaciones-atributo-nominal"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 20 #"atributoReferenciado"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"crearListaEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 1 #" "
0 0 14 3 18 #"listaEspecializada"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 18 #"listaEspecializada"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 18 #"listaEspecializada"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"indiceDelTipo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 18 #"listaEspecializada"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 21 #"conceptoEspecializado"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 1 #" "
0 0 14 3 13 #"indiceDelTipo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 27 #"crearListaEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 11 #"concepto-CL"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 6 #"indice"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 18 #"listaEspecializada"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 21 #"conceptoEspecializado"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 20 #"atributoReferenciado"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 27 #"crearListaEspecializaciones"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 10"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #"; (generalizaciones-atributo-nominal '(() (5 40) (subiendo) (estable"
 #") (10 60) (si)) 0 (car ejemplos))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 33 #"generalizaciones-atributo-nominal"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 20 #"atributoReferenciado"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 26 #"crearListaGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 1 #" "
0 0 14 3 17 #"listaGeneralizada"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 17 #"listaGeneralizada"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 17 #"listaGeneralizada"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"indiceDelTipo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 17 #"listaGeneralizada"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 20 #"conceptoGeneralizado"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 1 #" "
0 0 14 3 13 #"indiceDelTipo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 26 #"crearListaGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 11 #"concepto-CL"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 6 #"indice"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"listaGeneralizada"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 20 #"conceptoGeneralizado"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 20 #"atributoReferenciado"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 26 #"crearListaGeneralizaciones"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 15 #"tiposDeAtributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 11"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";(generalizacion-atributo-numerico '((soleado)(30)(20)(si)) 1 '(sole"
 #"ado 25 40 si -))"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";(generalizacion-atributo-numerico '((soleado)(15 20)(20)(si)) 1 '(s"
 #"oleado 25 40 si +))"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";(generalizacion-atributo-numerico '((soleado)(*)(20)(si)) 1 '(solea"
 #"do 25 40 si +))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemploEsPositivo"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Test limite inferior"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"limiteInferior"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"limite"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Test limite superior"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"limiteSuperior"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"limite"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"limite"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Estandarizar limites"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"estandarizarLimites"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"limites"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 2 #"))"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 6 #"-inf.0"
0 0 24 3 1 #" "
0 0 21 3 6 #"+inf.0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"limites"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"            )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 34 #"generalizaciones-atributo-numerico"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"generalizarConcepto"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 2 #" ("
0 0 14 3 19 #"estandarizarLimites"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"inferior"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"superior"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 14 #"limiteInferior"
0 0 24 3 1 #" "
0 0 14 3 8 #"inferior"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 2 #") "
0 0 14 3 8 #"superior"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 14 #"limiteSuperior"
0 0 24 3 1 #" "
0 0 14 3 8 #"superior"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"inferior"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 17 #"ejemploEsPositivo"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #")) "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 12 #"testNumerico"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 2 #") "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 19 #"generalizarConcepto"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 12"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 35 #"especializaciones-atributo-numerico"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 2 #" ("
0 0 14 3 19 #"estandarizarLimites"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"inferior"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"superior"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 21 #"limitesEstandarizados"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 17 #"ejemploEsPositivo"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"testNumerico"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 16 #"limiteEnConcepto"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"inferior"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 14 #"valorEnEjemplo"
0 0 24 3 1 #" "
0 0 14 3 8 #"superior"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"             )])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 13"
0 0 24 29 1 #"\n"
0 0 17 3 118
(
 #"; (generalizaciones-CL '(() (5 20) (subiendo) (estable) (10 60) (si)"
 #") (car ejemplos) '(bueno 26 estable subiendo 43 si"
) 0 0 17 3 1 #" "
0 0 17 3 3 #"+))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"generalizaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"crearGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 21 #"listaGeneralizaciones"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 21 #"listaGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"atributoConcepto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"esNominal"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"esNominal"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 21 #"crearGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 11 #"concepto-CL"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 9 #"metadatos"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"ejemplo"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 21 #"listaGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 33 #"generalizaciones-atributo-nominal"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 21 #"crearGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 11 #"concepto-CL"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 9 #"metadatos"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"ejemplo"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 21 #"listaGeneralizaciones"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 34 #"generalizaciones-atributo-numerico"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"       )))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 21 #"crearGeneralizaciones"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 14"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ("
0 0 17 3 1 #"e"
0 0 17 3 124
(
 #"specializaciones-CL '((bueno) (5 40) (subiendo) (estable) (10 60) (s"
 #"i)) (car ejemplos) '(bueno 26 estable subiendo 43 si -))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"especializaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"crearEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 22 #"listaEspecializaciones"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 22 #"listaEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"atributoConcepto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"esNominal"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"esNominal"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 22 #"crearEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 11 #"concepto-CL"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 9 #"metadatos"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"ejemplo"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 22 #"listaEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 34 #"especializaciones-atributo-nominal"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 22 #"crearEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 11 #"concepto-CL"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 9 #"metadatos"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"ejemplo"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 22 #"listaEspecializaciones"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 35 #"especializaciones-atributo-numerico"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"       )))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 22 #"crearEspecializaciones"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 15"
0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #"; Devuelve una lista con tantos elementos como clases hay. Cada elem"
 #"ento contiene todos los casos de esa clase"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"separarClases"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 14 3 10 #"agrupacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 10 #"agrupacion"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 13 #"claseAgrupada"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caso"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 4 #"eqv?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 10 #"agrupacion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"claseAgrupada"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 22 #"casosAgrupadosPorClase"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 13 #"tiposDeClases"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";(define PSET (car (separarClases ejemplos)))"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";(define NSET (list-ref (separarClases ejemplos) 1))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"EGS01"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 18 #"direccionEjemplos1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"HParaEliminar"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 2 #")("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"PSET"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"HParaEliminarYAnadir"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 2 #")("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"N"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"HSETfinal"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"remq*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"HParaEliminar"
0 0 24 3 1 #" "
0 0 14 3 20 #"HParaEliminarYAnadir"
0 0 24 3 2 #") "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETfinal"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 20 #"HParaEliminarYAnadir"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"concepto"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"N"
0 0 24 3 3 #") ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"HSETfinal"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 9 #"CSETfinal"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"SPECS"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"append-map"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"negativasDeH"
0 0 24 3 2 #" ("
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"especialiazaciones"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"especializaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"bueno"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 14 3 7 #"estable"
0 0 24 3 1 #" "
0 0 14 3 8 #"subiendo"
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 1 #" "
0 0 14 3 2 #"si"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 16 #"especialiazacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 16 #"especialiazacion"
0 0 24 3 3 #") ("
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 18 #"especialiazaciones"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               ) "
0 0 14 3 9 #"HSETfinal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"NEWSET"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"andmap"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"cmp-concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 3 #")) "
0 0 14 3 9 #"CSETfinal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 5 #"SPECS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"EGS01"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETfinal"
0 0 24 3 1 #" "
0 0 14 3 6 #"NEWSET"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"EGS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"EGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"HParaEliminar"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 2 #")("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"PSET"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"HParaEliminarYAnadir"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 2 #")("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"N"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"HSETfinal"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"remq*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"HParaEliminar"
0 0 24 3 1 #" "
0 0 14 3 20 #"HParaEliminarYAnadir"
0 0 24 3 2 #") "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETfinal"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 20 #"HParaEliminarYAnadir"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"concepto"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"N"
0 0 24 3 3 #") ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"HSETfinal"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 9 #"CSETfinal"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"SPECS"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"append-map"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"negativasDeH"
0 0 24 3 2 #" ("
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"especialiazaciones"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"especializaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 16 #"especialiazacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 16 #"especialiazacion"
0 0 24 3 3 #") ("
0 0 14 3 24 #"numeroNegativasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 18 #"especialiazaciones"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               ) "
0 0 14 3 9 #"HSETfinal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"NEWSET"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"andmap"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"cmp-concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 3 #")) "
0 0 14 3 9 #"CSETfinal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 5 #"SPECS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"EGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETfinal"
0 0 24 3 1 #" "
0 0 14 3 6 #"NEWSET"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"EGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concepto-CL-mas-general"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 16"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"direccionAgaricus"
0 0 24 3 1 #" "
0 0 19 3 129
(
 #"\"/Users/patriciamayotejedor/Documents/Private Development/UNED/Mach"
 #"ine Learning/MachineLearning/Assignment2/agaricus-lepiota.scm\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"agaricus-lepiota"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 17 #"direccionAgaricus"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"direccionIonosphere"
0 0 24 3 2 #"  "
0 0 19 3 123
(
 #"\"/Users/patriciamayotejedor/Documents/Private Development/UNED/Mach"
 #"ine Learning/MachineLearning/Assignment2/ionosphere.scm\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ionosphere"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 19 #"direccionIonosphere"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 17"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; (score-CL '((*) (*) (*) (*) (*) (*)) PSET NSET)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"instanciasAceptadas"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"concepto"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"SET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 15 #"totalInstancias"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 18 #"positivasAceptadas"
0 0 24 3 2 #" ("
0 0 14 3 19 #"instanciasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 20 #"negativasNoAceptadas"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 19 #"instanciasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 18 #"positivasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 20 #"negativasNoAceptadas"
0 0 24 3 2 #") "
0 0 14 3 15 #"totalInstancias"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 18"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; > (HGS0 PSET NSET '() '(((*) (*) (*) (*) (*) (*))))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; '(((*) (*) (subiendo) (*) (*) (*)))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Beam-Size"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 18 #"direccionEjemplos1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 7 #"; else "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 17 3 18 #";Variables locales"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"SPECS"
0 0 24 3 2 #" ("
0 0 14 3 20 #"especializaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"NEW-SET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 5 #"SPECS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 3 #")) "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarS"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarC"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"PSET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"NSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarC"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"HSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarS"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 2 #" ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 41 #"; Encuentra los conceptos con mayor score"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")) "
0 0 14 3 3 #"SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 3 #"min"
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            ) "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #" ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 14 3 9 #"Beam-Size"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"CSETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETFinal"
0 0 24 3 1 #" "
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"HGS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Beam-Size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 7 #"; else "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 17 3 18 #";Variables locales"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"SPECS"
0 0 24 3 2 #" ("
0 0 14 3 20 #"especializaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"NEW-SET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 5 #"SPECS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 3 #")) "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarS"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarC"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"PSET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"NSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarC"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"HSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarS"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 2 #" ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 41 #"; Encuentra los conceptos con mayor score"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")) "
0 0 14 3 3 #"SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 3 #"min"
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            ) "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #" ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 14 3 9 #"Beam-Size"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"CSETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETFinal"
0 0 24 3 1 #" "
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"conceptoGeneral"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concepto-CL-mas-general"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 15 #"conceptoGeneral"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 2 #") "
0 0 14 3 9 #"listaCSET"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 1 #" "
0 0 14 3 15 #"conceptoGeneral"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 52 #";(if (empty? listaCSET) listaCSET (first listaCSET))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 19"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; (HGS ionosphere)"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; (HGS agaricus-lepiota)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 23"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; (traducir '(perspectiva (soleado nublado lluvioso)) 'lluvioso)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"traducir"
0 0 24 3 1 #" "
0 0 14 3 13 #"meta-atributo"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"tipos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"meta-atributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"esNominal"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tipos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 9 #"esNominal"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 1 #" "
0 0 14 3 5 #"tipos"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 24"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";(nuevo-conceptoUU (car ejemplos) 1)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"nuevo-conceptoUU"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 4 #"init"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"init"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 9 #"metadatos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 25"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"AtributosProfesor"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 11 #"perspectiva"
0 0 24 3 2 #" ("
0 0 14 3 7 #"soleado"
0 0 24 3 1 #" "
0 0 14 3 7 #"nublado"
0 0 24 3 1 #" "
0 0 14 3 8 #"lluvioso"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"temperatura"
0 0 24 3 1 #" "
0 0 14 3 8 #"numerico"
0 0 24 3 3 #") ("
0 0 14 3 7 #"humedad"
0 0 24 3 1 #" "
0 0 14 3 8 #"numerico"
0 0 24 3 3 #") ("
0 0 14 3 6 #"viento"
0 0 24 3 2 #" ("
0 0 14 3 2 #"si"
0 0 24 3 1 #" "
0 0 14 3 2 #"no"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"clase"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";(match-LUU (list AtributosProfesor '(0 1 1 0 -30)) '(lluvioso 10 20"
 #" si))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"productoEscalar"
0 0 24 3 1 #" "
0 0 14 3 7 #"vector1"
0 0 24 3 1 #" "
0 0 14 3 7 #"vector2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 7 #"vector1"
0 0 24 3 1 #" "
0 0 14 3 7 #"vector2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"traducirEjemplo"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"meta-atributo"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 8 #"traducir"
0 0 24 3 1 #" "
0 0 14 3 13 #"meta-atributo"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"match-LUU"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoUU"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoUU"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"vectorPesos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoUU"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 16 #"ejemploTraducido"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"meta-atributo"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"traducir"
0 0 24 3 1 #" "
0 0 14 3 13 #"meta-atributo"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 8 #"producto"
0 0 24 3 2 #" ("
0 0 14 3 15 #"productoEscalar"
0 0 24 3 1 #" "
0 0 14 3 11 #"vectorPesos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 16 #"ejemploTraducido"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"producto"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #" ("
0 0 14 3 9 #"positive?"
0 0 24 3 1 #" "
0 0 14 3 8 #"producto"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 26"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";(LUUi (list AtributosProfesor '(0 1 1 0 -31)) '(lluvioso 10 20 si))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LUUi"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoUU"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 10 #"pasaUmbral"
0 0 24 3 2 #" ("
0 0 14 3 9 #"match-LUU"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoUU"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 10 #"pasaUmbral"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 30"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";(define concepto-UU (nuevo-conceptoUU (car ejemplos) 1))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"PRM"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-UU"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"ISET"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"recorrerISET"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"H"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"I"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"C"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"P"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LUUi"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"S"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 3 #")) "
0 0 21 3 2 #"-1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"recorrerISET"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 4 #"ATTS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"umbral"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"vectorAjustado"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 3 2 #" ("
0 0 14 3 8 #"traducir"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 3 2 #") "
0 0 14 3 1 #"W"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"recorrerISET"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"ISET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 14 #"vectorAjustado"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 6 #"umbral"
0 0 24 3 11 #")))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"recorrerISET"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-UU"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 31"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"PCP"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 16 #"nuevo-conceptoUU"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"ISET"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 1 #"H"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"NO-ERRORS"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"I"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"match-LUU"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 4 #"ISET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"NO-ERRORS"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 3 2 #" ("
0 0 14 3 3 #"PRM"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 14 3 4 #"ISET"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 8 #"contador"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 32"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"LMS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 2 #") "
0 0 17 3 6 #"; gain"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.9"
0 0 24 3 2 #") "
0 0 17 3 10 #"; momentum"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"Minimum-Error"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"conceptoUU"
0 0 24 3 2 #" ("
0 0 14 3 16 #"nuevo-conceptoUU"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"ATTS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoUU"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoUU"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"Aa"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"A"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 4 #"ATTS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"contador"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"ISET"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"recorrerATTS"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"A"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 8 #"GRADIENT"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"I"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ITraducido"
0 0 24 3 2 #" ("
0 0 14 3 15 #"traducirEjemplo"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 10 #"ITraducido"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 2 #" ("
0 0 14 3 15 #"productoEscalar"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 10 #"ITraducido"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 17 3 49 #";(define d (* P (/ (- 1 P) 100) (/ (- O P) 100)))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 3 2 #" ("
0 0 14 3 8 #"traducir"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 4 #"ISET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"viejoAa"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"nuevoAa"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 8 #"GRADIENT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 7 #"viejoAa"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"W"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"recorrerATTS"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 4 #"ATTS"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 7 #"nuevoAa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"nuevoAa"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 1 #"H"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"TOTAL-ERROR"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"I"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ITraducido"
0 0 24 3 2 #" ("
0 0 14 3 15 #"traducirEjemplo"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"I"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 10 #"ITraducido"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 2 #" ("
0 0 14 3 15 #"productoEscalar"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 10 #"ITraducido"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 4 #"ISET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 11 #"TOTAL-ERROR"
0 0 24 3 1 #" "
0 0 14 3 13 #"Minimum-Error"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 1 #"H"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 14 #"actualizarAayH"
0 0 24 3 2 #" ("
0 0 14 3 12 #"recorrerATTS"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"nuevoH"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 14 #"actualizarAayH"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"nuevoAa"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 14 #"actualizarAayH"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 3 1 #" "
0 0 14 3 6 #"nuevoH"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 7 #"nuevoAa"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"vectorPesos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 3 #") ("
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"ATTS"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"recorrerCOUNT"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"ISET"
0 0 24 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 24 3 1 #" "
0 0 14 3 2 #"Aa"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 53 #";(append (list ATTS) (recorrerCOUNT H ISET COUNT Aa))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 34"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #"; (distancia '(soleado 10 20 si) '(soleado 15 21 no -))   ->    5.19"
 #"6152422706632"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"IB"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #") ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"distancia"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"ejemplo-y"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 1 #"("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #" "
0 0 14 3 9 #"ejemplo-y"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 35"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"IBi"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-IB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 10 #"distancias"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"distancia"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #")) "
0 0 14 3 11 #"concepto-IB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"min-distancia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 3 #"min"
0 0 24 3 1 #" "
0 0 14 3 10 #"distancias"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 22 #"index-de-min-distancia"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 1 #" "
0 0 14 3 10 #"distancias"
0 0 24 3 1 #" "
0 0 14 3 13 #"min-distancia"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 20 #"concepto-mas-cercano"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-IB"
0 0 24 3 1 #" "
0 0 14 3 22 #"index-de-min-distancia"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 20 #"concepto-mas-cercano"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 36"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"match-IB"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-IB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 20 #"concepto-mas-cercano"
0 0 24 3 2 #" ("
0 0 14 3 3 #"IBi"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-IB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 20 #"concepto-mas-cercano"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercico 37"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"nuevo-conceptoNB"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"do"
0 0 24 3 3 #" (("
0 0 14 3 7 #"cuentas"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"valores"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 7 #"cuentas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #")("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 17 3 15 #";valor devuelto"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"valores"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"valores"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"numerico"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"cuentas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 8 #"numerico"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 7 #"cuentas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 10 #";nominales"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"cuentas"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 7 #"valores"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 7 #"cuentas"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"INB"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 13 #"listaPositiva"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"listaNegativa"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"valorNumerico"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"actualizarSuma"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 4 #"))) "
0 0 17 3 15 #"; sumar valores"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 14 #"actualizarSuma"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))) "
0 0 17 3 42 #"; suma de cuadrados -> distribucion normal"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorNominal"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"index-valorEjemplo"
0 0 24 3 2 #" ("
0 0 14 3 11 #"index-where"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 10 #"atributoNB"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #") "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 14 3 18 #"index-valorEjemplo"
0 0 24 3 3 #")) "
0 0 17 3 25 #"; buscar el par a cambiar"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 14 3 18 #"index-valorEjemplo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 17 3 16 #"; sumar 1 al par"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"actualizarNB"
0 0 24 3 1 #" "
0 0 14 3 7 #"listaNB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"clase"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"listaNB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 13 #"contadorClase"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"listaNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"atributos"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 10 #"atributoNB"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"valorNominal"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"valorNumerico"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 7 #"listaNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"contadorClase"
0 0 24 3 2 #") "
0 0 14 3 9 #"atributos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"actualizarNB"
0 0 24 3 1 #" "
0 0 14 3 13 #"listaPositiva"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 13 #"listaNegativa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"  "
0 0 14 3 13 #"listaPositiva"
0 0 24 3 2 #" ("
0 0 14 3 12 #"actualizarNB"
0 0 24 3 1 #" "
0 0 14 3 13 #"listaNegativa"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 38"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"NB"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"nuevoNB"
0 0 24 3 2 #" ("
0 0 14 3 16 #"nuevo-conceptoNB"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"recorrerEjemplos"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 11 #"concepto-NB"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 16 #"recorrerEjemplos"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"INB"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 5 #"casos"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 16 #"recorrerEjemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 7 #"nuevoNB"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 39"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"media"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 14 #"exact->inexact"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; Sumatorio (a - b)^2 =  Sumatorio (a^2 - 2ab + b^2)"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; Sumatorio a^2 = x2"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Sumatorio b^2 = n * m^2"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Sumatorio a = n * m"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; b = m"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"varianza"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 3 #"b^2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 3 #")) "
0 0 14 3 3 #"b^2"
0 0 24 3 4 #")  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 40"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; (probabilidades '+ (NB ejemplos) '(bueno 27 subiendo estable 54 si"
 #"))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"probabilidades"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 12 #"listaClaseNB"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"contadorClase"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 12 #"listaClaseNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"probabilidadNominal"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 1 #" "
0 0 14 3 13 #"contadorClase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"index-valorEjemplo"
0 0 24 3 2 #" ("
0 0 14 3 11 #"index-where"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 10 #"atributoNB"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #") "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 14 3 18 #"index-valorEjemplo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #") "
0 0 14 3 13 #"contadorClase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"probabilidadNumerica"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 1 #" "
0 0 14 3 13 #"contadorClase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 13 #"mediaAtributo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"media"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 13 #"contadorClase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 16 #"varianzaAtributo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"varianza"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"valorNB"
0 0 24 3 2 #") "
0 0 14 3 13 #"mediaAtributo"
0 0 24 3 1 #" "
0 0 14 3 13 #"contadorClase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"raiz"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 2 #"pi"
0 0 24 3 1 #" "
0 0 14 3 16 #"varianzaAtributo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"exponenteEuler"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"valorEjemplo"
0 0 24 3 1 #" "
0 0 14 3 13 #"mediaAtributo"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 16 #"varianzaAtributo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"raiz"
0 0 24 3 3 #") ("
0 0 14 3 3 #"exp"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 14 #"exponenteEuler"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 10 #"atributoNB"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 19 #"probabilidadNominal"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 1 #" "
0 0 14 3 13 #"contadorClase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 20 #"probabilidadNumerica"
0 0 24 3 1 #" "
0 0 14 3 10 #"atributoNB"
0 0 24 3 1 #" "
0 0 14 3 15 #"atributoEjemplo"
0 0 24 3 1 #" "
0 0 14 3 13 #"contadorClase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 12 #"listaClaseNB"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 41"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"NBi"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 20 #"probabilidadPositiva"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 14 #"probabilidades"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 20 #"probabilidadNegativa"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 14 #"probabilidades"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 20 #"probabilidadPositiva"
0 0 24 3 1 #" "
0 0 14 3 20 #"probabilidadNegativa"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 20 #"probabilidadPositiva"
0 0 24 3 1 #" "
0 0 14 3 20 #"probabilidadNegativa"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"match-NB"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 13 #"clasificacion"
0 0 24 3 2 #" ("
0 0 14 3 3 #"NBi"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-NB"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 13 #"clasificacion"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 42"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; ====================== LMS ======================="
0 0 24 29 1 #"\n"
0 0 17 3 52 #";> (stratified-cross-validation LMS CLi ejemplos 10)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";0.2"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";> (stratified-cross-validation LMS CLi ionosphere 10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.4696825396825397"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";> (stratified-cross-validation LMS CLi agaricus-lepiota 10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.5003674888965638"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; ====================== HGS ======================="
0 0 24 29 1 #"\n"
0 0 17 3 52 #";> (stratified-cross-validation HGS CLi ejemplos 10)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";0.4"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";> (stratified-cross-validation HGS CLi ionosphere 10)"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";0.45285714285714285"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; ====================== PCP ======================="
0 0 24 29 1 #"\n"
0 0 17 3 53 #";> (stratified-cross-validation PCP LUUi ejemplos 10)"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";0.35"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";> (stratified-cross-validation PCP LUUi ionosphere 10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.5643650793650794"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";> (stratified-cross-validation PCP LUUi agaricus-lepiota 10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.5140298656681148"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; ====================== IB ======================="
0 0 24 29 1 #"\n"
0 0 17 3 51 #";> (stratified-cross-validation IB IBi ejemplos 10)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";0.3"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";> (stratified-cross-validation IB IBi ionosphere 10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.5752380952380952"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";> (stratified-cross-validation IB IBi agaricus-lepiota 10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.5204389568526228"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; ====================== NB ======================="
0 0 24 29 1 #"\n"
0 0 17 3 51 #";> (stratified-cross-validation NB NBi ejemplos 10)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";0.3"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";> (stratified-cross-validation NB NBi ionosphere 10)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";0.0"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";> (stratified-cross-validation NB NBi agaricus-lepiota 10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.5171139851792608"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; BLOQUE 3"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; ================================================================="
 #"=="
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 1"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";(define concepto-LD '((match-CL ((soleado)(30 40)(50 60)(*)) => +)("
 #"match-CL ((*)(*)(*)(*)) => -)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";(define ejemplo-sin-clase '(soleado 30 40 si))"
0 0 24 29 1 #"\n"
0 0 17 3 146
(
 #";(LDi `((match-LUU ,(list AtributosProfesor '(0 1 1 0 -30)) => +) (m"
 #"atch-LUU ,(list AtributosProfesor '(0 1 -1 0 -20)) => -)) '(soleado "
 #"30 40 si))"
) 0 0 24 29 1 #"\n"
0 0 17 3 145
(
 #";(LDi `((match-LUU ,(list AtributosProfesor '(0 1 1 0 -30)) => +)(ma"
 #"tch-LUU ,(list AtributosProfesor '(0 1 -1 0 -20)) => -)) '(soleado 1"
 #"0 10 si))"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"LDi"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-LD"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 15 #"conceptoQuePasa"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"concepto"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"matchProcedure"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoCL"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           (("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 14 #"matchProcedure"
0 0 24 3 2 #") "
0 0 14 3 10 #"conceptoCL"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 11 #"concepto-LD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 15 #"conceptoQuePasa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 15 #"conceptoQuePasa"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 2"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; (funcion-match HGS)"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";> (eval `(,(funcion-match HGS) '((soleado)(*)) '(soleado si)))"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";#t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"*funciones-match*"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 3 #"HGS"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"match-CL"
0 0 24 3 2 #")("
0 0 14 3 2 #"NB"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"match-NB"
0 0 24 3 2 #")("
0 0 14 3 2 #"IB"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"match-IB"
0 0 24 3 2 #")("
0 0 14 3 3 #"LMS"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 9 #"match-LUU"
0 0 24 3 2 #")("
0 0 14 3 3 #"PCP"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 9 #"match-LUU"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"funcion-match"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 17 #"funcionEncontrada"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"funcion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"funcion"
0 0 24 3 3 #")) "
0 0 14 3 9 #"algoritmo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 17 #"*funciones-match*"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 17 #"funcionEncontrada"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"NSC01"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 3 #"DNF"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"nuevoPSET"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"nuevoNSET"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"N"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"clase"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"nuevosEjemplos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #") "
0 0 14 3 9 #"nuevoPSET"
0 0 24 3 1 #" "
0 0 14 3 9 #"nuevoNSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"DNF"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"D"
0 0 24 3 2 #" ("
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 14 #"nuevosEjemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"nuevoDNF"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"DNF"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 19 #"instanciasCubiertas"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     (("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 13 #"funcion-match"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 3 #")) "
0 0 14 3 1 #"D"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 19 #"instanciasCubiertas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 3 #"DNF"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"NSC01"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 19 #"instanciasCubiertas"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #") "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"nuevoDNF"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"  )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; No usar esto"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";(define (NSC0 algoritmo PSET NSET DNF)"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";(let* ((ejemplos (leer-ejemplos direccionEjemplos1))"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";       (metadatos (car ejemplos))"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";       (nuevosEjemplos (append (list metadatos) PSET NSET)))"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";  (if (empty? PSET)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";      DNF"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";      (let* ((D (algoritmo nuevosEjemplos))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";             (nuevoDNF (append DNF (list D)))"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";             (instanciasCubiertas (filter"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";                                   (lambda (P)"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";                                     ((eval (funcion-match algoritm"
 #"o)) D (drop-right P 1)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";                                   PSET)))"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";        (if (empty? instanciasCubiertas)"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";            DNF"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";            (NSC0 algoritmo (remq* instanciasCubiertas PSET) NSET n"
 #"uevoDNF)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 6 #";  )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"NSC"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #"(("
0 0 14 3 15 #"clasesSeparadas"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"PSET"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesSeparadas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesSeparadas"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"NSC0"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 3 #"DNF"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"nuevosEjemplos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #") "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 3 #"DNF"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"D"
0 0 24 3 2 #" ("
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 14 #"nuevosEjemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"nuevoDNF"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"DNF"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 19 #"instanciasCubiertas"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          (("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 13 #"funcion-match"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 3 #")) "
0 0 14 3 1 #"D"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 19 #"instanciasCubiertas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 3 #"DNF"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"NSC0"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 19 #"instanciasCubiertas"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #") "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"nuevoDNF"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"           )))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"NSC0"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 5"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"casosDeClase"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"MSC0"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"CSET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 13 #"funcion-match"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"RULES-PER-CLASS"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"CLASS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #" ("
0 0 14 3 12 #"casosDeClase"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #" "
0 0 14 3 5 #"CLASS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"DNF"
0 0 24 3 2 #" ("
0 0 14 3 5 #"NSC01"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 5 #"CLASS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 3 #"DNF"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 4 #"CSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"append*"
0 0 24 3 1 #" "
0 0 14 3 15 #"RULES-PER-CLASS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"MSC"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"append"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"MSC0"
0 0 24 3 1 #" "
0 0 14 3 9 #"algoritmo"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"make-list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"A0"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 6"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"MSC-HGS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"append"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"MSC0"
0 0 24 3 1 #" "
0 0 14 3 3 #"HGS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"make-list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"A0"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"MSC-LMS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"append"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"MSC0"
0 0 24 3 1 #" "
0 0 14 3 3 #"LMS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"make-list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"A0"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"MSC-PCP"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"append"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"MSC0"
0 0 24 3 1 #" "
0 0 14 3 3 #"PCP"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"make-list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"A0"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"direccionLymphography"
0 0 24 3 1 #" "
0 0 19 3 125
(
 #"\"/Users/patriciamayotejedor/Documents/Private Development/UNED/Mach"
 #"ine Learning/MachineLearning/Assignment3/lymphography.scm\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"lymphography"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 21 #"direccionLymphography"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"direccionPoker"
0 0 24 3 2 #"  "
0 0 19 3 118
(
 #"\"/Users/patriciamayotejedor/Documents/Private Development/UNED/Mach"
 #"ine Learning/MachineLearning/Assignment3/poker.scm\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"poker"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 14 #"direccionPoker"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 7"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 6 #"> (adc"
0 0 17 3 1 #" "
0 0 17 3 10 #"'(soleado "
0 0 17 3 9 #"20) '(((("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 9 #"-inf.0 30"
0 0 17 3 7 #")) -> ("
0 0 17 3 3 #"=> "
0 0 17 3 7 #"+)) ((("
0 0 17 3 1 #"*"
0 0 17 3 3 #")(("
0 0 17 3 2 #"30"
0 0 17 3 11 #") +inf.0)) "
0 0 17 3 2 #"->"
0 0 17 3 4 #" (=>"
0 0 17 3 1 #" "
0 0 17 3 17 #"-))))   > '(=> +)"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; > ("
0 0 17 3 3 #"adc"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 5 #"15) '"
0 0 17 3 4 #"(((("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 6 #")) ((("
0 0 17 3 1 #"*"
0 0 17 3 4 #") (("
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 6 #"+inf.0"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 16 #"-))))      > '()"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"adc"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #" "
0 0 14 3 12 #"ramas-JC-adc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 4 #"rama"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rama"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"match-CL"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"rama"
0 0 24 3 2 #") "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 12 #"ramas-JC-adc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rama"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"rama"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 8"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"multivariadoJC"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 3 7 #"    ((("
0 0 14 3 7 #"soleado"
0 0 24 3 2 #")("
0 0 21 3 6 #"-inf.0"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"    ((("
0 0 14 3 7 #"soleado"
0 0 24 3 3 #")(("
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 6 #"+inf.0"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"    ((("
0 0 14 3 7 #"nublado"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"    ((("
0 0 14 3 8 #"lluvioso"
0 0 24 3 2 #")("
0 0 21 3 6 #"-inf.0"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"    ((("
0 0 14 3 8 #"lluvioso"
0 0 24 3 3 #")(("
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 6 #"+inf.0"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Ejercicio 9"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 1 #"("
0 0 17 3 3 #"adg"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 2 #"40"
0 0 17 3 1 #" "
0 0 17 3 2 #"si"
0 0 17 3 12 #") `(((match-"
0 0 17 3 1 #"L"
0 0 17 3 4 #"UU ("
0 0 17 3 1 #","
0 0 17 3 20 #" AtributosProfesor ("
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 3 #"1 0"
0 0 17 3 1 #" "
0 0 17 3 3 #"-30"
0 0 17 3 4 #"))) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 5 #"+))(("
0 0 17 3 9 #"match-LUU"
0 0 17 3 2 #" ("
0 0 17 3 1 #","
0 0 17 3 18 #" AtributosProfesor"
0 0 17 3 2 #" ("
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 3 #"-20"
0 0 17 3 4 #"))) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 6 #"-)))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"adg"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #" "
0 0 14 3 8 #"ramas-JC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 4 #"rama"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rama"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"rama"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"matchProcedure"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoCL"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 14 #"matchProcedure"
0 0 24 3 2 #") "
0 0 14 3 10 #"conceptoCL"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 8 #"ramas-JC"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rama"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"rama"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 10"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; (define"
0 0 17 3 1 #" "
0 0 17 3 2 #"JC"
0 0 17 3 3 #" '("
0 0 17 3 7 #"adc ((("
0 0 17 3 7 #"soleado"
0 0 17 3 2 #")("
0 0 17 3 1 #"*"
0 0 17 3 14 #")) -> (adc ((("
0 0 17 3 1 #"*"
0 0 17 3 8 #")(-inf.0"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 5 #")) ->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 7 #"+)) ((("
0 0 17 3 1 #"*"
0 0 17 3 3 #")(("
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 6 #"+inf.0"
0 0 17 3 5 #")) ->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 20 #" -)) )) (((nublado)("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 4 #"-> ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 7 #"-)) ((("
0 0 17 3 8 #"lluvioso"
0 0 17 3 2 #")("
0 0 17 3 1 #"*"
0 0 17 3 14 #")) -> (adc ((("
0 0 17 3 1 #"*"
0 0 17 3 2 #")("
0 0 17 3 6 #"-inf.0"
0 0 17 3 1 #" "
0 0 17 3 5 #"10)) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 4 #" -))"
0 0 17 3 4 #" ((("
0 0 17 3 1 #"*"
0 0 17 3 3 #")(("
0 0 17 3 2 #"10"
0 0 17 3 2 #") "
0 0 17 3 6 #"+inf.0"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 3 #"=> "
0 0 17 3 9 #"+)) )) ))"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; (JCi"
0 0 17 3 1 #" "
0 0 17 3 2 #"JC"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 4 #"50))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"JCi"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-JC"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"recorrerJC"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"concepto"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"=>"
0 0 24 3 3 #") ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"recorrerJC"
0 0 24 3 3 #" (("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 3 #")) "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 2 #" ("
0 0 14 3 10 #"recorrerJC"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-JC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemplo-sin-clase"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 11"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 20 #"> (dividir-ejemplos "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 11 #"perspectiva"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 8 #"lluvioso"
0 0 17 3 3 #")) "
0 0 17 3 3 #"'(("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 7 #"soleado"
0 0 17 3 3 #" 25"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 2 #")("
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 4 #"-)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 2 #"(("
0 0 17 3 7 #"soleado"
0 0 17 3 13 #" (soleado 10 "
0 0 17 3 4 #"-) ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 4 #")) ("
0 0 17 3 8 #"lluvioso"
0 0 17 3 2 #" ("
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 4 #"-)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 16 #"dividir-ejemplos"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 2 #")("
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 4 #"-)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 3 #"((("
0 0 17 3 2 #">="
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 3 #") ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 3 #") ("
0 0 17 3 8 #"lluvioso"
0 0 17 3 24 #" 30 -)) ((< 25) (soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 4 #"-)))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 1 #"d"
0 0 14 3 1 #"i"
0 0 14 3 14 #"vidir-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 14 3 22 #"ejemplos-sin-metadatos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 8 #"posicion"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"esNumerico"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"numerico"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"DividirNominal"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"valoresPosibles"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 3 #") ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicion"
0 0 24 3 2 #") "
0 0 14 3 5 #"valor"
0 0 24 3 3 #")) "
0 0 14 3 22 #"ejemplos-sin-metadatos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 15 #"valoresPosibles"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"DividirNumerico"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"umbral"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"mayor"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicion"
0 0 24 3 2 #") "
0 0 14 3 6 #"umbral"
0 0 24 3 3 #")) "
0 0 14 3 22 #"ejemplos-sin-metadatos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"menor"
0 0 24 3 2 #" ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 5 #"mayor"
0 0 24 3 1 #" "
0 0 14 3 22 #"ejemplos-sin-metadatos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 6 #"umbral"
0 0 24 3 3 #")) "
0 0 14 3 5 #"mayor"
0 0 24 3 3 #" ) "
0 0 17 3 20 #"; la marte mayor que"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 6 #"umbral"
0 0 24 3 3 #")) "
0 0 14 3 5 #"menor"
0 0 24 3 4 #" )) "
0 0 17 3 20 #"; la parte menor que"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 10 #"esNumerico"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"DividirNumerico"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"DividirNominal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 12"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 2 #"> "
0 0 17 3 47 #"(generar-discriminantes '((perspectiva (soleado"
0 0 17 3 12 #" lluvioso))("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 11 #"numerico)) "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 7 #"soleado"
0 0 17 3 3 #" 10"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 2 #")("
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 4 #"-)))"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";'(("
0 0 17 3 11 #"perspectiva"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 8 #"lluvioso"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 3 #") ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 3 #") ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 4 #"30))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"generar-discriminantes"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 22 #"ejemplos-sin-metadatos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"recorrerMetadatos"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 14 #"discriminantes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #") "
0 0 14 3 6 #"indice"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 14 #"discriminantes"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 8 #"atributo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"esNominal"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"esNominal"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 17 #"recorrerMetadatos"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 14 #"discriminantes"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 2 #") "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 17 #"recorrerMetadatos"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 14 #"discriminantes"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 17 #"remove-duplicates"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 2 #") "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"numerico"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 14 3 22 #"ejemplos-sin-metadatos"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                ))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"recorrerMetadatos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 13"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ("
0 0 17 3 28 #"capacidad-de-discriminacion1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 11 #"perspectiva"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 8 #"lluvioso"
0 0 17 3 3 #")) "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 2 #")("
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 15 #"-)))      > 2/3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"capacidad-de-discriminacion1"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 12 #"valoresClase"
0 0 24 3 2 #" ("
0 0 14 3 17 #"remove-duplicates"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #") ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #")) "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 20 #"ejemplosConMetadatos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"clase"
0 0 24 3 1 #" "
0 0 14 3 12 #"valoresClase"
0 0 24 3 4 #"))) "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"esencia"
0 0 24 3 2 #" ("
0 0 14 3 2 #"A0"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplosConMetadatos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"ejemplosDivididos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"dividir-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"Cv"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 7 #"ejemplo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caso"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 4 #"caso"
0 0 24 3 2 #") "
0 0 14 3 7 #"esencia"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 5 #")))) "
0 0 14 3 17 #"ejemplosDivididos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"sumatorioCv"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"sumatorioCv"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 16"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #"; Lo tengo que poner antes para poder cambiar el valor de capacidad-"
 #"de-discriminacion"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";> "
0 0 17 3 1 #"("
0 0 17 3 28 #"capacidad-de-discriminacion2"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 11 #"perspectiva"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 6 #"lluvia"
0 0 17 3 1 #" "
0 0 17 3 8 #"variable"
0 0 17 3 1 #" "
0 0 17 3 5 #"bueno"
0 0 17 3 1 #" "
0 0 17 3 4 #"frio"
0 0 17 3 1 #" "
0 0 17 3 6 #"niebla"
0 0 17 3 1 #" "
0 0 17 3 9 #"calorSeco"
0 0 17 3 4 #")) ("
0 0 17 3 3 #"cdr"
0 0 17 3 11 #" ejemplos))"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.8332062193464952"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"capacidad-de-discriminacion2"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"totalEjemplos"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"clasesPositivas"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #")) "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"clasesNegativas"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #"  "
0 0 14 3 13 #"totalEjemplos"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesPositivas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 28 #"ejemplosDivididosPorAtributo"
0 0 24 3 2 #" ("
0 0 14 3 16 #"dividir-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 9 #"positivos"
0 0 24 3 1 #" "
0 0 14 3 9 #"negativos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"positivos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"negativos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"clase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"proporcion"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"clase"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"positivos"
0 0 24 3 1 #" "
0 0 14 3 9 #"negativos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 10 #"proporcion"
0 0 24 3 3 #") ("
0 0 14 3 3 #"log"
0 0 24 3 1 #" "
0 0 14 3 10 #"proporcion"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 6 #")) ) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"positivos"
0 0 24 3 1 #" "
0 0 14 3 9 #"negativos"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"entropiaTotal"
0 0 24 3 2 #" ("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesPositivas"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesNegativas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"entropiaAtributo"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 17 #"ejemploDeAtributo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 17 #"ejemploDeAtributo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 23 #"totalEjemplosDeAtributo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"positivosDeAtributo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #")) "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"negativosDeAtributo"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #"  "
0 0 14 3 23 #"totalEjemplosDeAtributo"
0 0 24 3 1 #" "
0 0 14 3 19 #"positivosDeAtributo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 23 #"totalEjemplosDeAtributo"
0 0 24 3 1 #" "
0 0 14 3 13 #"totalEjemplos"
0 0 24 3 3 #") ("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 19 #"positivosDeAtributo"
0 0 24 3 1 #" "
0 0 14 3 19 #"negativosDeAtributo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 28 #"ejemplosDivididosPorAtributo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 13 #"entropiaTotal"
0 0 24 3 1 #" "
0 0 14 3 16 #"entropiaAtributo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"capacidad-de-discriminacion"
0 0 24 3 1 #" "
0 0 14 3 28 #"capacidad-de-discriminacion2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 14"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 20 #"lista-discriminantes"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 11 #"perspectiva"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 12 #"lluvioso)) ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 9 #"numerico "
0 0 17 3 3 #"10)"
0 0 17 3 2 #" ("
0 0 17 3 11 #"temperatura"
0 0 17 3 2 #" 1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 5 #"25) ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 2 #"1 "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 5 #"30)))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; (define"
0 0 17 3 1 #" "
0 0 17 3 20 #"ejemplos-disponibles"
0 0 17 3 1 #" "
0 0 17 3 17 #"'((soleado 10 -)("
0 0 17 3 14 #"soleado 25 +)("
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #" "
0 0 17 3 4 #"-)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 65
#"> (mayor-discriminante lista-discriminantes ejemplos-disponibles)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 2 #"(("
0 0 17 3 11 #"perspectiva"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 8 #"lluvioso"
0 0 17 3 4 #")) ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 5 #"10) ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 3 #") ("
0 0 17 3 11 #"temperatura"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 4 #"30))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"mayor-discriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"lista-discriminantes"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 23 #"valoresDeDiscriminantes"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     (("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 27 #"capacidad-de-discriminacion"
0 0 24 3 2 #") "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 20 #"lista-discriminantes"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"valorMayor"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 14 3 23 #"valoresDeDiscriminantes"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 18 #"discriminanteMayor"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 20 #"lista-discriminantes"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 1 #" "
0 0 14 3 23 #"valoresDeDiscriminantes"
0 0 24 3 1 #" "
0 0 14 3 10 #"valorMayor"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 19 #"restoDiscriminantes"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 13 #"discriminante"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 14 3 18 #"discriminanteMayor"
0 0 24 3 4 #"))) "
0 0 14 3 20 #"lista-discriminantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 18 #"discriminanteMayor"
0 0 24 3 2 #") "
0 0 14 3 19 #"restoDiscriminantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 15"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";>"
0 0 17 3 9 #" (define "
0 0 17 3 20 #"lista-discriminantes"
0 0 17 3 17 #" '((perspectiva 0"
0 0 17 3 18 #" (soleado lluvioso"
0 0 17 3 1 #" "
0 0 17 3 7 #"nublado"
0 0 17 3 15 #")) (temperatura"
0 0 17 3 17 #" 1 numerico 10)( "
0 0 17 3 12 #"temperatura "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 1 #" "
0 0 17 3 18 #"25) (temperatura 1"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerico"
0 0 17 3 6 #" 30)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";>"
0 0 17 3 9 #" (define "
0 0 17 3 9 #"ejemplos1"
0 0 17 3 4 #" '(("
0 0 17 3 10 #"soleado 10"
0 0 17 3 2 #" -"
0 0 17 3 9 #")(soleado"
0 0 17 3 3 #" 25"
0 0 17 3 34 #" +)(lluvioso 25 -)(nublado 30 +)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";>"
0 0 17 3 2 #" ("
0 0 17 3 4 #"DDT0"
0 0 17 3 1 #" "
0 0 17 3 20 #"lista-discriminantes"
0 0 17 3 1 #" "
0 0 17 3 10 #"ejemplos1)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 4 #"(adc"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";  ((("
0 0 17 3 7 #"soleado"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"adc ("
0 0 24 29 1 #"\n"
0 0 17 3 32 #";                            ((("
0 0 17 3 1 #"*"
0 0 17 3 4 #") (("
0 0 17 3 2 #"25"
0 0 17 3 2 #") "
0 0 17 3 6 #"+inf.0"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 3 #"+))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";                            ((("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 6 #"-inf.0"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 6 #"-)))))"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";   (("
0 0 17 3 14 #"lluvioso (*)) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 3 #"-))"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";   (("
0 0 17 3 7 #"nublado"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 10 #")) -> (=> "
0 0 17 3 5 #"+))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list-equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"DDT0"
0 0 24 3 1 #" "
0 0 14 3 20 #"lista-discriminantes"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list-equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #") ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #")) "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 3 #")) "
0 0 17 3 45 #"; si todos los ejemplos tienen la misma clase"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"=>"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 20 #"lista-discriminantes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 89
(
 #"; si no queda discriminantes devolver la clase mayoritaria entre los"
 #" ejemplos disponibles"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 15 #"clasesPositivas"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 7 #"ejemplo"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 7 #"ejemplo"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #")) "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 15 #"clasesNegativas"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #") "
0 0 14 3 15 #"clasesPositivas"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesPositivas"
0 0 24 3 1 #" "
0 0 14 3 15 #"clasesNegativas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     ))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 23 #"discriminantesOrdenados"
0 0 24 3 2 #" ("
0 0 14 3 19 #"mayor-discriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"lista-discriminantes"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 18 #"mayorDiscriminante"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 23 #"discriminantesOrdenados"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 19 #"restoDiscriminantes"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 23 #"discriminantesOrdenados"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"posicion"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 18 #"mayorDiscriminante"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 28 #"ejemplosDivididosPorAtributo"
0 0 24 3 2 #" ("
0 0 14 3 16 #"dividir-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 18 #"mayorDiscriminante"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"conceptosCLNumerico"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 12 #"ramaAtributo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"ramaAtributo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"casoGenerico"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"valor"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"drop-right"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #">="
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 12 #"casoGenerico"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 2 #") "
0 0 21 3 6 #"+inf.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 12 #"casoGenerico"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicion"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 6 #"-inf.0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 14 3 28 #"ejemplosDivididosPorAtributo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 2 #"de"
0 0 15 3 4 #"fine"
0 0 24 3 1 #" "
0 0 14 3 18 #"conceptosCLNominal"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 12 #"ramaAtributo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"ramaAtributo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"casoGenerico"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"valor"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"drop-right"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 20 #"ejemplos-disponibles"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"list-set"
0 0 24 3 1 #" "
0 0 14 3 12 #"casoGenerico"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicion"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"atributo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  ) "
0 0 14 3 28 #"ejemplosDivididosPorAtributo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"conceptosCL"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 28 #"ejemplosDivididosPorAtributo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 19 #"conceptosCLNumerico"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 18 #"conceptosCLNominal"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"adc"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 10 #"conceptoCL"
0 0 24 3 1 #" "
0 0 14 3 12 #"ramaAtributo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"conceptoCL"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 3 #" (("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"DDT0"
0 0 24 3 2 #") "
0 0 14 3 19 #"restoDiscriminantes"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"ramaAtributo"
0 0 24 3 6 #"))))) "
0 0 14 3 11 #"conceptosCL"
0 0 24 3 1 #" "
0 0 14 3 28 #"ejemplosDivididosPorAtributo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"  ))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"DDT"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"metadatos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"casos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"discriminantes"
0 0 24 3 2 #" ("
0 0 14 3 22 #"generar-discriminantes"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 9 #"metadatos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"casos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"DDT0"
0 0 24 3 1 #" "
0 0 14 3 14 #"discriminantes"
0 0 24 3 1 #" "
0 0 14 3 5 #"casos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 16"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";> "
0 0 17 3 1 #"("
0 0 17 3 28 #"capacidad-de-discriminacion2"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 11 #"perspectiva"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 6 #"lluvia"
0 0 17 3 1 #" "
0 0 17 3 8 #"variable"
0 0 17 3 1 #" "
0 0 17 3 5 #"bueno"
0 0 17 3 1 #" "
0 0 17 3 4 #"frio"
0 0 17 3 1 #" "
0 0 17 3 6 #"niebla"
0 0 17 3 1 #" "
0 0 17 3 9 #"calorSeco"
0 0 17 3 4 #")) ("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 10 #"ejemplos))"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.8332062193464952"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; --> Se ha movido para estar entre los ejercicios 13 y 14"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 17"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";> (define"
0 0 17 3 1 #" "
0 0 17 3 13 #"ejemplos-test"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 3 #"((("
0 0 17 3 11 #"perspectiva"
0 0 17 3 2 #" ("
0 0 17 3 7 #"soleado"
0 0 17 3 1 #" "
0 0 17 3 8 #"lluvioso"
0 0 17 3 1 #" "
0 0 17 3 7 #"nublado"
0 0 17 3 14 #"))(temperatura"
0 0 17 3 1 #" "
0 0 17 3 11 #"numerico) ("
0 0 17 3 5 #"clase"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 17 #"))) (soleado 10 -"
0 0 17 3 2 #")("
0 0 17 3 10 #"soleado 25"
0 0 17 3 1 #" "
0 0 17 3 3 #"+)("
0 0 17 3 30 #"lluvioso 30 -)(nublado 30 +)))"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; ===================================  (define "
0 0 17 3 84
(
 #"capacidad-de-discriminacion capacidad-de-discriminacion1) =========="
 #"================"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";> (DDT ejemplos-test)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 4 #"(adc"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";  (((soleado"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 5 #"adc ("
0 0 24 29 1 #"\n"
0 0 17 3 27 #";                       ((("
0 0 17 3 1 #"*"
0 0 17 3 4 #") (("
0 0 17 3 2 #"10"
0 0 17 3 2 #") "
0 0 17 3 6 #"+inf.0"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";                                              ("
0 0 17 3 3 #"adc"
0 0 17 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 17 3 55 #";                                                   ((("
0 0 17 3 1 #"*"
0 0 17 3 4 #") (("
0 0 17 3 2 #"25"
0 0 17 3 2 #") "
0 0 17 3 6 #"+inf.0"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";                                                   ((("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 6 #"-inf.0"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";                       ((("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 6 #"-inf.0"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 3 #")) "
0 0 17 3 9 #"-> ()))))"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";   (("
0 0 17 3 8 #"lluvioso"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 3 #"-))"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";   (("
0 0 17 3 7 #"nublado"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 5 #"+))))"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; ===================================  (define "
0 0 17 3 84
(
 #"capacidad-de-discriminacion capacidad-de-discriminacion2) =========="
 #"================"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"> "
0 0 17 3 1 #"("
0 0 17 3 3 #"DDT"
0 0 17 3 1 #" "
0 0 17 3 14 #"ejemplos-test)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 1 #"("
0 0 17 3 3 #"adc"
0 0 17 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 17 3 9 #";      (("
0 0 17 3 7 #"soleado"
0 0 17 3 2 #" ("
0 0 17 3 4 #"*)) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 3 #"adc"
0 0 17 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 17 3 33 #";                             ((("
0 0 17 3 1 #"*"
0 0 17 3 4 #") (("
0 0 17 3 2 #"25"
0 0 17 3 2 #") "
0 0 17 3 6 #"+inf.0"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";                             ((("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 6 #"-inf.0"
0 0 17 3 1 #" "
0 0 17 3 2 #"25"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";      (("
0 0 17 3 8 #"lluvioso"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";      (("
0 0 17 3 7 #"nublado"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 2 #"->"
0 0 17 3 2 #" ("
0 0 17 3 2 #"=>"
0 0 17 3 1 #" "
0 0 17 3 5 #"+))))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";>"
0 0 17 3 2 #" ("
0 0 17 3 27 #"stratified-cross-validation"
0 0 17 3 1 #" "
0 0 17 3 3 #"DDT"
0 0 17 3 1 #" "
0 0 17 3 3 #"JCi"
0 0 17 3 1 #" "
0 0 17 3 12 #"lymphography"
0 0 17 3 1 #" "
0 0 17 3 3 #"10)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";0.4"
0 0 17 3 1 #"2"
0 0 17 3 15 #"142857142857143"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";> ("
0 0 17 3 27 #"stratified-cross-validation"
0 0 17 3 1 #" "
0 0 17 3 3 #"DDT"
0 0 17 3 1 #" "
0 0 17 3 3 #"JCi"
0 0 17 3 1 #" "
0 0 17 3 16 #"agaricus-lepiota"
0 0 17 3 1 #" "
0 0 17 3 3 #"10)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";0.5050465344554923"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 18"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";>"
0 0 17 3 2 #" ("
0 0 17 3 9 #"union-CL1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 7 #"soleado"
0 0 17 3 2 #")("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 1 #"*"
0 0 17 3 2 #")("
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"30)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 2 #"(("
0 0 17 3 7 #"soleado"
0 0 17 3 3 #") ("
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 4 #"30))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";>"
0 0 17 3 2 #" ("
0 0 17 3 9 #"union-CL1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 1 #"*"
0 0 17 3 2 #")("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 1 #"*"
0 0 17 3 2 #")("
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 5 #"30)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";'"
0 0 17 3 2 #"(("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 4 #"30))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"union-CL"
0 0 24 3 1 #" "
0 0 14 3 12 #"concepto-CL1"
0 0 24 3 1 #" "
0 0 14 3 12 #"concepto-CL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 3 #"cl1"
0 0 24 3 1 #" "
0 0 14 3 3 #"cl2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 3 #"cl1"
0 0 24 3 1 #" "
0 0 14 3 3 #"cl2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 3 #"cl2"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 3 #"cl1"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     ) "
0 0 14 3 12 #"concepto-CL1"
0 0 24 3 1 #" "
0 0 14 3 12 #"concepto-CL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Ejercicio 19"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"JC"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"adc"
0 0 24 3 4 #" ((("
0 0 14 3 7 #"soleado"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 3 #"adc"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"*"
0 0 24 3 2 #")("
0 0 21 3 6 #"-inf.0"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 6 #")) ((("
0 0 14 3 1 #"*"
0 0 24 3 3 #")(("
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 6 #"+inf.0"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 9 #")) )) ((("
0 0 14 3 7 #"nublado"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 6 #")) ((("
0 0 14 3 8 #"lluvioso"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 3 #"adc"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"*"
0 0 24 3 2 #")("
0 0 21 3 6 #"-inf.0"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 6 #")) ((("
0 0 14 3 1 #"*"
0 0 24 3 3 #")(("
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 6 #"+inf.0"
0 0 24 3 3 #")) "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"=>"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 8 #")) )) ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"DTL"
0 0 24 3 1 #" "
0 0 14 3 22 #"arbol-decision-clasico"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"def"
0 0 15 3 1 #"i"
0 0 15 3 2 #"ne"
0 0 24 3 1 #" "
0 0 14 3 13 #"recorrerArbol"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 14 3 5 #"RULES"
0 0 24 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"=>"
0 0 24 3 2 #") "
0 0 17 3 25 #"; Ver si es nodo terminal"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list*"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"nuevoLHS"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 1 #"T"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 8 #"union-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       ))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"recorrerArbol"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"RULES"
0 0 24 3 1 #" "
0 0 14 3 8 #"nuevoLHS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                 ) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"remove-duplicates"
0 0 24 3 2 #" ("
0 0 14 3 13 #"recorrerArbol"
0 0 24 3 1 #" "
0 0 14 3 22 #"arbol-decision-clasico"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"DTL-DDT"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 3 #"DTL"
0 0 24 3 2 #" ("
0 0 14 3 3 #"DDT"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")))"
0           0
