#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 0
1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1           0 1457 0 17 3 26 #";;Plantilla b2-e17-e19.scm"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;Autor: Patricia Mayo Tejedor"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;Ejercicio 17"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"he-tardado"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"b2-e17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";>"
0 0 17 3 2 #" ("
0 0 17 3 8 #"score-CL"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"(("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 8 #"subiendo"
0 0 17 3 3 #") ("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 1 #"*"
0 0 17 3 3 #") ("
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 4 #"PSET"
0 0 17 3 6 #" NSET)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 8          10 17 5 #"7/10\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"instanciasAceptadas"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"concepto"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 8 #"match-CL"
0 0 24 3 1 #" "
0 0 14 3 8 #"concepto"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"SET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 15 #"totalInstancias"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 18 #"positivasAceptadas"
0 0 24 3 2 #" ("
0 0 14 3 19 #"instanciasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 20 #"negativasNoAceptadas"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 19 #"instanciasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 11 #"concepto-CL"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 18 #"positivasAceptadas"
0 0 24 3 1 #" "
0 0 14 3 20 #"negativasNoAceptadas"
0 0 24 3 2 #") "
0 0 14 3 15 #"totalInstancias"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Ejercicio 18"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"he-tardado"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"b2-e18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 124
(
 #";; Creo que hay un error con el pseudocodigo del libro, ya que este "
 #"dice que HGSO devuelva el concepto en CSET con mas score"
) 0 0 24 29 1 #"\n"
0 0 17 3 114
(
 #";; Sin embargo en el enunciado parece como que se pide que se devuel"
 #"va CSET entero, y ya en HGS elegir uno al azar"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Lo he dejado como en el libro por ahora"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; Como BeamSize he elegido 4, si pongo infinito entonces se comport"
 #"a como el EGS."
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; > (HGS0 PSET NSET '() '(((*) (*) (*) (*) (*) (*))))  o   (HGS eje"
 #"mplos)"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";; '(((*) (*) (subiendo) (*) (*) (*)))"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; El resultado concuerda con el concepto buen dia para salir al cam"
 #"po"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Beam-Size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #" ("
0 0 14 3 13 #"leer-ejemplos"
0 0 24 3 1 #" "
0 0 14 3 18 #"direccionEjemplos1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 7 #"; else "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 17 3 18 #";Variables locales"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"SPECS"
0 0 24 3 2 #" ("
0 0 14 3 20 #"especializaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"NEW-SET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 5 #"SPECS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 3 #")) "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarS"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarC"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"PSET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"NSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarC"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"HSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarS"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 2 #" ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 41 #"; Encuentra los conceptos con mayor score"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")) "
0 0 14 3 3 #"SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 3 #"min"
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            ) "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #" ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 14 3 9 #"Beam-Size"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"CSETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETFinal"
0 0 24 3 1 #" "
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"HGS"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 9 #"Beam-Size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 7 #"; else "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 17 3 18 #";Variables locales"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"SPECS"
0 0 24 3 2 #" ("
0 0 14 3 20 #"especializaciones-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"NEW-SET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 5 #"SPECS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"H"
0 0 24 3 3 #")) "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarS"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"eliminarC"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"ormap"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"test-CL>="
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ) "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"indice"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"PSET"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"NSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarC"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 4 #"HSET"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"remq*"
0 0 24 3 1 #" "
0 0 14 3 9 #"eliminarS"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 7 #"NEW-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"          )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 2 #" ("
0 0 14 3 13 #"getOPENyCLOSE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"CSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"HSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"openyclose"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 41 #"; Encuentra los conceptos con mayor score"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"S"
0 0 24 3 3 #") ("
0 0 14 3 8 #"score-CL"
0 0 24 3 1 #" "
0 0 14 3 1 #"S"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 3 #")) "
0 0 14 3 3 #"SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 2 #" ("
0 0 14 3 3 #"min"
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 10 #"sortedList"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"SET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 1 #" "
0 0 14 3 6 #"scores"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            ) "
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #" ("
0 0 14 3 14 #"scoresMasAltos"
0 0 24 3 1 #" "
0 0 14 3 9 #"Beam-Size"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"CSETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 9 #"CLOSE-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"OPEN-SET"
0 0 24 3 1 #" "
0 0 14 3 8 #"BEST-SET"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 14 3 9 #"CSETFinal"
0 0 24 3 1 #" "
0 0 14 3 13 #"OPEN-SETFinal"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 13 #"separarClases"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"conceptoGeneral"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concepto-CL-mas-general"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"ejemplos"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"positivoAlAzar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"obtener-al-azar"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 2 #" ("
0 0 14 3 4 #"HGS0"
0 0 24 3 1 #" "
0 0 14 3 4 #"PSET"
0 0 24 3 1 #" "
0 0 14 3 4 #"NSET"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 15 #"conceptoGeneral"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 2 #") "
0 0 14 3 9 #"listaCSET"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 1 #" "
0 0 14 3 15 #"conceptoGeneral"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaCSET"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 52 #";(if (empty? listaCSET) listaCSET (first listaCSET))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;Ejercicio 19"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"he-tardado"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"b2-e19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";; Como se esperaba con HGS y ionosphere se devuelve el vacio al igu"
 #"al que con el EGS se devolvia vacio"
) 0 0 24 29 1 #"\n"
0 0 17 3 4 #";; >"
0 0 17 3 2 #" ("
0 0 17 3 3 #"HGS"
0 0 17 3 12 #" ionosphere)"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; '()"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; agaricus-lepiota ha tardado muchisimo, casi dos minutos en ejecut"
 #"arse"
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #";;> (HGS agaricus-lepiota)"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";;'(((*) (*) (*) (*) (n) (*) (*) (*) (*) (*) (*) (*) (*) (*) (*) (*)"
 #" (*) (*) (*) (*) (*) (*)))"
) 0 0 24 29 1 #"\n"
0           0
